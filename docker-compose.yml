version: '3'

services:

  proxy:
    build: nginx-proxy/
    container_name: nginx-proxy
    ports:
      - "80:80"
    restart: on-failure
    volumes:
       - /home/docker/ministation/nginx-proxy/config/portainer.conf:/etc/nginx/conf.d/portainer.conf


  templates:
    build: portainer-templates/ 
    container_name: "portainer-templates"




  logo:
    build: portainer-logo
    container_name: logo




  portainer:
    image: portainer/portainer
    container_name: "portainer-app"
#Automatically choose 'Manage the Docker instance where Portainer is running' by adding <--host=unix:///var/run/docker.sock> to the command
    command: --no-auth --templates http://templates/templates.json --logo "http://logo/logo.svg"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/portainer/data:/data




  watchtower:
    image: v2tec/watchtower
    container_name: "portainer-watchtower"
    command: --cleanup portainer-app portainer-watchtower portainer/templates
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock




  grafana:
     image: grafana/grafana
     container_name: grafana
     volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini/
    # environment:
     # - GF_PATHS_CONFIG= /grafana.ini




  zeppelin:
     build: zeppelin/
     container_name: zeppelin




  nifi:
     build: nifi/
     container_name: nifi




  webserver:
     build: webserver/
     container_name: webserver

  elfinder:
 #     build: elfinder/
     image: sebastianhutter/elfinder
     container_name: elfinder
     environment:
       - ELFINDER_FILES_URI = /elfinder/files
